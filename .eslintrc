{
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "warnOnUnsupportedTypeScriptVersion": false,
      "ecmaVersion": 6,
      "sourceType": "module"
    },
    "env": {
      "browser": false,
      "node": true,
      "es6": true
    },
    "plugins": [
      "@typescript-eslint"
    ],
    "rules": {
      "@typescript-eslint/array-type": [
        "error",
        {
          "default": "array-simple"
        }
      ],
      "@typescript-eslint/comma-spacing": [
        "error"
      ],
      "@typescript-eslint/consistent-type-definitions": [
        "error",
        "interface"
      ],
      "@typescript-eslint/explicit-function-return-type": "error",
      "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "variable",
          "format": [
            "camelCase",
            "PascalCase",
            "UPPER_CASE"
          ],
          "leadingUnderscore": "allow"
        },
        {
          "selector": "parameter",
          "format": [
            "camelCase"
          ],
          "leadingUnderscore": "allow"
        },
        {
          "selector": "enumMember",
          "format": [
            "UPPER_CASE"
          ],
          "leadingUnderscore": "allow"
        },
        {
          "selector": "interface",
          "format": [
            "PascalCase"
          ],
          "custom": {
            "regex": "^I[A-Z][a-z]+(?:[A-Z][a-z]+)*$",
            "match": true
          },
          "leadingUnderscore": "allow"
        }
      ],
      "@typescript-eslint/no-explicit-any": "error",
      "@typescript-eslint/no-extra-parens": [
        "error"
      ],
      "@typescript-eslint/no-inferrable-types": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-require-imports": "error",
      "@typescript-eslint/no-this-alias": "error",
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/no-unused-expressions": [
        "error",
        {
          "allowTernary": true
        }
      ],
      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "@typescript-eslint/quotes": [
        "error",
        "single",
        {
          "avoidEscape": true,
          "allowTemplateLiterals": true
        }
      ],
      "@typescript-eslint/semi": "error",
      "@typescript-eslint/space-before-function-paren": [
        "error",
        {
          "asyncArrow": "always",
          "anonymous": "always",
          "named": "never"
        }
      ],
      "@typescript-eslint/triple-slash-reference": "error",
      "@typescript-eslint/type-annotation-spacing": "error",
      "@typescript-eslint/unified-signatures": "error",
      "brace-style": [
        "error",
        "1tbs",
        {
          "allowSingleLine": true
        }
      ],
      "comma-spacing": "off",
      "constructor-super": "error",
      "curly": [
        "error",
        "multi-line"
      ],
      "dot-notation": "error",
      "eol-last": "error",
      "eqeqeq": "error",
      "max-len": [
        "error",
        150
      ],
      "newline-before-return": "error",
      "no-console": "error",
      "no-explicit-any": "off",
      "no-extra-parens": "off",
      "no-unused-expressions": "off",
      "new-parens": "error",
      "no-caller": "error",
      "no-duplicate-case": "error",
      "no-duplicate-imports": "error",
      "no-empty": "error",
      "no-eval": "error",
      "no-extra-bind": "error",
      "no-fallthrough": "error",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-return-await": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-throw-literal": "error",
      "no-trailing-spaces": "error",
      "no-undef-init": "error",
      "no-unsafe-finally": "error",
      "no-unused-labels": "error",
      "no-unused-vars": "off",
      "no-var": "error",
      "object-shorthand": "error",
      "prefer-const": "error",
      "prefer-object-spread": "error",
      "quote-props": [
        "error",
        "consistent-as-needed"
      ],
      "quotes": "off",
      "semi": "off",
      "space-before-function-paren": "off",
      "space-in-parens": "error",
      "unicode-bom": [
        "error",
        "never"
      ],
      "use-isnan": "error"
    }
  }